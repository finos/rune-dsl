name: Deploy a branch as a snapshot version.

on:
  workflow_dispatch:
    inputs:
      run-tests:
        type: boolean
        description: Run tests
        default: true

# Cancel previous jobs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      normalized: ${{ steps.normalize.outputs.normalized }}
    steps:
      - uses: actions/checkout@v5
      - name: Normalize branch name
        id: normalize
        uses: ./.github/actions/normalize-branch-name

  deploy-branch:
    needs: prepare
    runs-on: ubuntu-latest
    outputs:
      build-ts: ${{ steps.capture-ts.outputs.build_ts }}
    steps:
      - uses: actions/checkout@v5
      - name: Capture build timestamp
        id: capture-ts
        run: echo "::set-output name=build_ts::$(date +%s)"
      - name: Deploy snapshot to Central (composite action)
        uses: ./.github/actions/maven-build
        with:
          set-version: 0.0.0.${{ needs.prepare.outputs.normalized }}-SNAPSHOT
          build-command: install org.sonatype.central:central-publishing-maven-plugin:0.7.0:publish -P release
          run-tests: ${{ inputs.run-tests }}
        env:
          CI_DEPLOY_USERNAME: ${{ secrets.CI_DEPLOY_USERNAME_CENTRAL }}
          CI_DEPLOY_PASSWORD: ${{ secrets.CI_DEPLOY_PASSWORD_CENTRAL }}
          RUNE_GPG_PRIVATE_KEY: ${{ secrets.RUNE_GPG_PRIVATE_KEY }}
          RUNE_GPG_PASSPHRASE: ${{ secrets.RUNE_GPG_PASSPHRASE }}

  wait-for-snapshot:
    needs: [prepare, deploy-branch]
    runs-on: ubuntu-latest
    steps:
      - name: Poll for snapshot availability
        run: |
          GROUP_ID="org/finos/rune"
          ARTIFACT_ID="rune-runtime"
          VERSION="0.0.0.${{ needs.prepare.outputs.normalized }}-SNAPSHOT"

          # Use the timestamp from the previous step
          BUILD_TS=${{ needs.build-and-publish.outputs.build-ts }}
          echo "Polling $URL for snapshot updated after previous build step ($BUILD_TS)"

          for i in {1..30}; do
            LAST_MODIFIED=$(curl -sI "$URL" | grep -i "^Last-Modified:" | sed 's/Last-Modified: //I' | xargs -I{} date -d "{}" +%s)

            if [[ -n "$LAST_MODIFIED" && "$LAST_MODIFIED" -ge "$BUILD_TS" ]]; then
              echo "Snapshot $VERSION has been updated! Last-Modified: $(date -d @$LAST_MODIFIED)"
              exit 0
            fi

            echo "Snapshot not updated yet... waiting 20s"
            sleep 20
          done

          echo "Snapshot not available after 10 minutes"
          exit 1

  backport-deploy-branch:
    needs: [prepare, wait-for-snapshot]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Deploy Rosetta Backport snapshot
        uses: ./.github/actions/maven-build
        with:
          working-directory: rosetta-backport
          set-version: 0.0.0.${{ needs.prepare.outputs.normalized }}-SNAPSHOT
          build-command: install org.sonatype.central:central-publishing-maven-plugin:0.7.0:publish -P release
          run-tests: ${{ inputs.run-tests }}
        env:
          CI_DEPLOY_USERNAME: ${{ secrets.CI_DEPLOY_USERNAME }}
          CI_DEPLOY_PASSWORD: ${{ secrets.CI_DEPLOY_PASSWORD }}
          RUNE_GPG_PRIVATE_KEY: ${{ secrets.RUNE_GPG_PRIVATE_KEY }}
          RUNE_GPG_PASSPHRASE: ${{ secrets.RUNE_GPG_PASSPHRASE }}
