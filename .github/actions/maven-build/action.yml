name: Maven Build
description: Run a Maven Build

inputs:
  build-command:
    description: The Maven goal(s)/command to run after 'clean'. E.g. 'package' or 'install org.sonatype.central:central-publishing-maven-plugin:0.7.0:publish -P release'.
    required: false
    default: package
  run-tests:
    description: Whether or not to run tests. The default is true.
    required: false
    # type: boolean - This is not supported (yet). All inputs are of type `string`. See https://github.com/actions/runner/issues/2238.
    default: 'true'
  working-directory:
    description: Working directory to run Maven in.
    required: false
    default: '.'
  set-version:
    description: If provided, runs 'mvn versions:set -DgenerateBackupPoms=false -DnewVersion=<value>' before the build.
    required: false
    default: ''

runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Set up JDK 21 for x64
      uses: actions/setup-java@v5
      with:
        java-version: '21'
        distribution: 'temurin'
        architecture: x64
        cache: maven
        server-id: ossrh
        server-username: CI_DEPLOY_USERNAME
        server-password: CI_DEPLOY_PASSWORD
        gpg-private-key: ${{ env.RUNE_GPG_PRIVATE_KEY }}
        gpg-passphrase: RUNE_GPG_PASSPHRASE
      env:
        RUNE_GPG_PRIVATE_KEY: ${{ env.RUNE_GPG_PRIVATE_KEY }}
        RUNE_GPG_PASSPHRASE: ${{ env.RUNE_GPG_PASSPHRASE }}
    - name: Set version
      if: ${{ inputs.set-version != '' }}
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: mvn -B versions:set -DgenerateBackupPoms=false -DnewVersion=${{ inputs.set-version }}
    - name: Build with Maven
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: mvn -B clean ${{ inputs.build-command }}${{ inputs.run-tests == 'false' && ' -DskipTests' || '' }}
